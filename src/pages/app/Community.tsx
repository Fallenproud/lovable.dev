import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { SEOHead } from '../../components/ui/SEOHead';
import { Search, Filter, Star, Eye, Heart, MessageCircle, Share, Zap, Trophy, Users } from 'lucide-react';

export function Community() {
  const [activeTab, setActiveTab] = useState<'featured' | 'trending' | 'recent'>('featured');
  const [searchQuery, setSearchQuery] = useState('');

  const projects = [
    {
      id: 'ai-recipe-generator',
      title: 'AI Recipe Generator',
      description: 'Generate personalized recipes based on ingredients you have at home using AI.',
      author: {
        name: 'Sarah Chen',
        username: 'sarahc',
        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=40&h=40&fit=crop&crop=face'
      },
      image: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400&h=300&fit=crop',
      tags: ['AI', 'Food', 'React', 'OpenAI'],
      stats: {
        views: 1240,
        likes: 89,
        comments: 23
      },
      featured: true,
      trending: true,
      createdAt: '2024-01-15'
    },
    {
      id: 'expense-tracker',
      title: 'Smart Expense Tracker',
      description: 'Track your expenses with AI-powered categorization and spending insights.',
      author: {
        name: 'Alex Rodriguez',
        username: 'alexr',
        avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=40&h=40&fit=crop&crop=face'
      },
      image: 'https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=400&h=300&fit=crop',
      tags: ['Finance', 'Dashboard', 'Charts', 'Vue'],
      stats: {
        views: 980,
        likes: 67,
        comments: 15
      },
      featured: true,
      trending: false,
      createdAt: '2024-01-14'
    },
    {
      id: 'workout-planner',
      title: 'AI Workout Planner',
      description: 'Personalized workout plans generated by AI based on your fitness goals.',
      author: {
        name: 'Maria Garcia',
        username: 'mariag',
        avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=40&h=40&fit=crop&crop=face'
      },
      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400&h=300&fit=crop',
      tags: ['Health', 'Fitness', 'AI', 'Mobile'],
      stats: {
        views: 756,
        likes: 45,
        comments: 12
      },
      featured: false,
      trending: true,
      createdAt: '2024-01-13'
    },
    {
      id: 'code-reviewer',
      title: 'AI Code Reviewer',
      description: 'Automated code review tool that provides suggestions and best practices.',
      author: {
        name: 'David Kim',
        username: 'davidk',
        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=40&h=40&fit=crop&crop=face'
      },
      image: 'https://images.unsplash.com/photo-1555066931-4365d14bab8c?w=400&h=300&fit=crop',
      tags: ['Developer Tools', 'AI', 'Code Quality', 'TypeScript'],
      stats: {
        views: 1120,
        likes: 78,
        comments: 19
      },
      featured: false,
      trending: true,
      createdAt: '2024-01-12'
    },
    {
      id: 'language-tutor',
      title: 'AI Language Tutor',
      description: 'Interactive language learning app with AI-powered conversation practice.',
      author: {
        name: 'Jennifer Liu',
        username: 'jenliu',
        avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=40&h=40&fit=crop&crop=face'
      },
      image: 'https://images.unsplash.com/photo-1434030216411-0b793f4b4173?w=400&h=300&fit=crop',
      tags: ['Education', 'AI', 'Language', 'Chat'],
      stats: {
        views: 890,
        likes: 56,
        comments: 14
      },
      featured: false,
      trending: false,
      createdAt: '2024-01-11'
    }
  ];

  const getFilteredProjects = () => {
    let filtered = projects;
    
    if (activeTab === 'featured') {
      filtered = projects.filter(p => p.featured);
    } else if (activeTab === 'trending') {
      filtered = projects.filter(p => p.trending);
    }
    
    if (searchQuery) {
      filtered = filtered.filter(p => 
        p.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
        p.description.toLowerCase().includes(searchQuery.toLowerCase()) ||
        p.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))
      );
    }
    
    return filtered;
  };

  const filteredProjects = getFilteredProjects();

  return (
    <>
      <SEOHead 
        title="Community"
        description="Discover amazing projects built by the Lovable community"
        noIndex={true}
      />
      
      <div className="space-y-8">
        {/* Header */}
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Community</h1>
          <p className="mt-2 text-gray-600">
            Discover amazing projects built by the Lovable community
          </p>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="bg-gradient-to-r from-blue-500 to-blue-600 text-white p-6 rounded-lg">
            <div className="flex items-center">
              <Users className="h-8 w-8 mr-4" />
              <div>
                <div className="text-2xl font-bold">12,450</div>
                <div className="text-blue-100">Active Builders</div>
              </div>
            </div>
          </div>
          <div className="bg-gradient-to-r from-green-500 to-green-600 text-white p-6 rounded-lg">
            <div className="flex items-center">
              <Zap className="h-8 w-8 mr-4" />
              <div>
                <div className="text-2xl font-bold">3,280</div>
                <div className="text-green-100">Projects Created</div>
              </div>
            </div>
          </div>
          <div className="bg-gradient-to-r from-purple-500 to-purple-600 text-white p-6 rounded-lg">
            <div className="flex items-center">
              <Trophy className="h-8 w-8 mr-4" />
              <div>
                <div className="text-2xl font-bold">156</div>
                <div className="text-purple-100">Featured Projects</div>
              </div>
            </div>
          </div>
        </div>

        {/* Search and Tabs */}
        <div className="flex flex-col lg:flex-row gap-4 items-center justify-between">
          <div className="flex items-center space-x-1 bg-gray-100 rounded-lg p-1">
            <button
              onClick={() => setActiveTab('featured')}
              className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${
                activeTab === 'featured'
                  ? 'bg-white text-gray-900 shadow-sm'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              Featured
            </button>
            <button
              onClick={() => setActiveTab('trending')}
              className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${
                activeTab === 'trending'
                  ? 'bg-white text-gray-900 shadow-sm'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              Trending
            </button>
            <button
              onClick={() => setActiveTab('recent')}
              className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${
                activeTab === 'recent'
                  ? 'bg-white text-gray-900 shadow-sm'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              Recent
            </button>
          </div>
          
          <div className="flex-1 max-w-md relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
            <input
              type="text"
              placeholder="Search projects..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
          </div>
        </div>

        {/* Projects Grid */}
        {filteredProjects.length === 0 ? (
          <div className="text-center py-12">
            <div className="text-gray-400 mb-4">
              <Search className="h-12 w-12 mx-auto" />
            </div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">No projects found</h3>
            <p className="text-gray-600">Try adjusting your search or browse different categories.</p>
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredProjects.map((project) => (
              <div
                key={project.id}
                className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow"
              >
                <div className="relative">
                  <img
                    src={project.image}
                    alt={project.title}
                    className="w-full h-48 object-cover"
                  />
                  <div className="absolute top-3 left-3 flex space-x-2">
                    {project.featured && (
                      <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                        <Star className="h-3 w-3 mr-1" />
                        Featured
                      </span>
                    )}
                    {project.trending && (
                      <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                        ðŸ”¥ Trending
                      </span>
                    )}
                  </div>
                  <div className="absolute top-3 right-3">
                    <button className="p-2 bg-white/90 rounded-full hover:bg-white transition-colors">
                      <Eye className="h-4 w-4 text-gray-600" />
                    </button>
                  </div>
                </div>
                
                <div className="p-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-2">
                    {project.title}
                  </h3>
                  
                  <p className="text-gray-600 text-sm mb-4 line-clamp-2">
                    {project.description}
                  </p>
                  
                  <div className="flex items-center space-x-3 mb-4">
                    <img
                      src={project.author.avatar}
                      alt={project.author.name}
                      className="w-6 h-6 rounded-full"
                    />
                    <Link
                      to={`/u/${project.author.username}`}
                      className="text-sm font-medium text-gray-900 hover:text-blue-600"
                    >
                      {project.author.name}
                    </Link>
                    <span className="text-sm text-gray-500">
                      {new Date(project.createdAt).toLocaleDateString()}
                    </span>
                  </div>
                  
                  <div className="flex flex-wrap gap-2 mb-4">
                    {project.tags.slice(0, 3).map((tag) => (
                      <span
                        key={tag}
                        className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800"
                      >
                        {tag}
                      </span>
                    ))}
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-4 text-sm text-gray-500">
                      <div className="flex items-center">
                        <Eye className="h-4 w-4 mr-1" />
                        <span>{project.stats.views}</span>
                      </div>
                      <div className="flex items-center">
                        <Heart className="h-4 w-4 mr-1" />
                        <span>{project.stats.likes}</span>
                      </div>
                      <div className="flex items-center">
                        <MessageCircle className="h-4 w-4 mr-1" />
                        <span>{project.stats.comments}</span>
                      </div>
                    </div>
                    
                    <button className="p-2 text-gray-400 hover:text-gray-600 rounded-full hover:bg-gray-100 transition-colors">
                      <Share className="h-4 w-4" />
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}

        {/* Call to Action */}
        <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg p-8 text-center text-white">
          <h2 className="text-2xl font-bold mb-4">Share Your Creation</h2>
          <p className="text-blue-100 mb-6">
            Built something amazing with Lovable? Share it with the community and inspire others!
          </p>
          <Link
            to="/app/playground"
            className="inline-flex items-center px-6 py-3 bg-white text-blue-600 font-medium rounded-md hover:bg-gray-100 transition-colors"
          >
            <Zap className="h-5 w-5 mr-2" />
            Start Building
          </Link>
        </div>
      </div>
    </>
  );
}
